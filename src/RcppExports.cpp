// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "styleganr_types.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpp_bias_act
XPtrTorchTensor cpp_bias_act(XPtrTorchTensor x, XPtrTorchTensor b, XPtrTorchTensor xref, XPtrTorchTensor yref, XPtrTorchTensor dy, int grad, int dim, int act, float alpha, float gain, float clamp);
RcppExport SEXP _styleganr_cpp_bias_act(SEXP xSEXP, SEXP bSEXP, SEXP xrefSEXP, SEXP yrefSEXP, SEXP dySEXP, SEXP gradSEXP, SEXP dimSEXP, SEXP actSEXP, SEXP alphaSEXP, SEXP gainSEXP, SEXP clampSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrTorchTensor >::type x(xSEXP);
    Rcpp::traits::input_parameter< XPtrTorchTensor >::type b(bSEXP);
    Rcpp::traits::input_parameter< XPtrTorchTensor >::type xref(xrefSEXP);
    Rcpp::traits::input_parameter< XPtrTorchTensor >::type yref(yrefSEXP);
    Rcpp::traits::input_parameter< XPtrTorchTensor >::type dy(dySEXP);
    Rcpp::traits::input_parameter< int >::type grad(gradSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type act(actSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type gain(gainSEXP);
    Rcpp::traits::input_parameter< float >::type clamp(clampSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_bias_act(x, b, xref, yref, dy, grad, dim, act, alpha, gain, clamp));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_styleganr_cpp_bias_act", (DL_FUNC) &_styleganr_cpp_bias_act, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_styleganr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
